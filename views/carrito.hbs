<head>
    <link rel="stylesheet" href="/carrito.css"> <!-- Aqu√≠ se hace referencia al archivo carrito.css -->
</head>
<div class="carrito-container">
    <h3>Carrito de Compras</h3>
    
    {{#if carrito.length}}
    <div class="productos-carrito">
        {{#each carrito}}
            <div class="producto-carrito">
                <div class="producto-info">
                    <p>{{nombre}} (Modelo: {{modelo}})</p>
                </div>
                <div class="producto-eliminar">
                    <button class="btn btn-danger" onclick="eliminarDelCarrito('{{modelo}}')">Eliminar</button>
                </div>
            </div>
        {{/each}}
        
        <div class="compra-container">
            <button class="btn btn-success" onclick="comprar()">Comprar</button>
        </div>
    </div>
    {{else}}
    <div class="carrito-vacio">
        <p>Tu carrito est√° vac√≠o.</p>
    </div>
    {{/if}}
</div>

<script>
    function eliminarDelCarrito(modelo) {
        fetch('/eliminarCarrito', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ modelo })
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'ok') {
                location.reload(); // Recargamos la p√°gina para actualizar el carrito
            }
        });
    }

    function comprar() {
        fetch('/comprar', {
            method: 'POST',
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'ok') {
                alert('Compra realizada');
                window.location.href = '/'; // Redirigimos al inicio despu√©s de la compra
            }
        });
    }
</script>

<!-- Notificaci√≥n visual -->
<div id="noti" class="alert alert-info" style="display: none; position: fixed; top: 20px; right: 20px; z-index: 1000;">
  <!-- El mensaje se completa con JS -->
</div>

<!-- Socket.IO -->
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();

  // Escuchar mensaje general del servidor
  socket.on('mensaje', (msg) => {
    console.log('üì® Servidor:', msg);
  });

  // Mostrar notificaci√≥n visual si alguien agrega un producto
  socket.on('productoAgregado', ({ modelo }) => {
    const noti = document.getElementById('noti');
    noti.textContent = `üõí Alguien agreg√≥ el modelo "${modelo}" al carrito`;
    noti.style.display = 'block';
    setTimeout(() => noti.style.display = 'none', 3000); // Oculta despu√©s de 3s
  });
</script>